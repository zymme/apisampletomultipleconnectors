<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:twitter="http://www.mulesoft.org/schema/mule/twitter" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/twitter http://www.mulesoft.org/schema/mule/twitter/2.4/mule-twitter.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd" version="EE-3.4.0">
    <mongo:config name="mongo" database="mydb" doc:name="Mongo DB">
        <mongo:connection-pooling-profile initialisationPolicy="INITIALISE_ONE" exhaustedAction="WHEN_EXHAUSTED_GROW" />
    </mongo:config>
    <apikit:config name="tracking-config" raml="tracking.raml" consoleEnabled="true" consolePath="console" doc:name="Router" />
    <apikit:mapping-exception-strategy name="tracking-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" />
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" />
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" />
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" />
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" />
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
    <twitter:config name="Twitter" accessKey="${twitter.access.token}" accessSecret="${twitter.access.token.secret}" consumerKey="${consumer.twitter.key}" consumerSecret="${consumer.twitter.secret}" doc:name="Twitter">
        <twitter:connection-pooling-profile initialisationPolicy="INITIALISE_ONE" exhaustedAction="WHEN_EXHAUSTED_GROW"/>
    </twitter:config>
    <flow name="tracking-main" doc:name="tracking-main">
        <http:inbound-endpoint address="http://localhost:8081/api" doc:name="HTTP" />
        <apikit:router config-ref="tracking-config" doc:name="APIkit Router" />
        <exception-strategy ref="tracking-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
   
    <flow name="post:/track:tracking-config" doc:name="post:/track:tracking-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
        
        <logger message="#[message.payload] logging it!!" level="INFO" doc:name="Logger" />
       
        <json:json-to-object-transformer returnClass="com.zed.test.components.TrackItem" doc:name="JSON to Object" />
       
        <!--  example for using json auto detect -->
        <!--     	<component class="com.zed.test.components.TrackItemService" doc:name="Java"/> -->
        <!-- end example for using json auto detect -->
       
<!--         <component class="com.zed.test.components.InterceptCallable" doc:name="Java" /> -->

 		<set-property propertyName="twitterMessage" value="#[payload.getOwner() + ' ' + payload.getProcess() + ' ' + payload.getItem() + ' ' + payload.getStage() + ' ' + payload.getStep() + ' at:' + payload.getStagetime()]" doc:name="Property"/>
       
        <all doc:name="All">
            <mongo:insert-object-from-map config-ref="mongo" collection="trackitems" doc:name="Mongo DB">
                <mongo:element-attributes>
                    <mongo:element-attribute key="owner" value-ref="#[payload.getOwner()]"/>
                    <mongo:element-attribute key="process" value-ref="#[payload.getProcess()]"/>
                    <mongo:element-attribute key="item" value-ref="#[payload.getItem()]"/>
                    <mongo:element-attribute key="stage" value-ref="#[payload.getStage()]"/>
                    <mongo:element-attribute key="step" value-ref="#[payload.getStep()]"/>
                    <mongo:element-attribute key="stagetime" value-ref="#[payload.getStagetime()]"/>
                </mongo:element-attributes>
            </mongo:insert-object-from-map>
            <logger level="INFO" doc:name="Logger" message="LOGGER PAYLOAD ALL = #[payload.getOwner() + ' ' + payload.getProcess() + ' ' + payload.getItem()]"/>
            
            <twitter:update-status config-ref="Twitter" status="#[message.outboundProperties['twitterMessage']]" doc:name="Tweet Tracked Item"/>
            <twitter:send-direct-message-by-screen-name config-ref="Twitter" message="Tracking Item : #[message.outboundProperties['twitterMessage']]" screenName="dzymme" doc:name="Tweet direct message to screenname"/>

        </all>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
            
       

<!-- works - you can simply accept a json object and do the below 2 steps and it will insert it into your mongodb -->
<!--         <mongo:json-to-dbobject doc:name="Mongo DB"/> -->

<!--  works -->
<!-- 		<mongo:insert-object config-ref="mongo" collection="trackitems" doc:name="Mongo DB"/> -->

	
		
    </flow>
  
    <flow name="post:/trackitem:tracking-config" doc:name="post:/trackitem:tracking-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
</mule>
